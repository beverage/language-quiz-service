#!/bin/bash

# scripts/generate_compose_env.sh
# Generate .env.compose.local for docker-compose from local Supabase status

set -euo pipefail

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

echo_info() { echo -e "${GREEN}[INFO]${NC} $1"; }
echo_warn() { echo -e "${YELLOW}[WARN]${NC} $1"; }
echo_error() { echo -e "${RED}[ERROR]${NC} $1"; }

# Verify dependencies
if ! command -v supabase >/dev/null 2>&1; then
  echo_error "Supabase CLI not found. Install from https://supabase.com/docs/guides/cli"
  exit 1
fi
if ! command -v jq >/dev/null 2>&1; then
  echo_error "jq not found. Install via brew install jq or your package manager."
  exit 1
fi

# Ensure Supabase is running locally
if ! supabase status >/dev/null 2>&1; then
  echo_error "Local Supabase is not running. Start it first: 'supabase start'"
  exit 1
fi

STATUS_JSON=$(supabase status --output json 2>/dev/null || true)
if [ -z "${STATUS_JSON}" ] || [ "${STATUS_JSON}" = "null" ]; then
  echo_warn "Could not read JSON output from 'supabase status'. Falling back to defaults."
  STATUS_JSON='{}'
fi

# Extract fields with safe fallbacks
API_URL=$(echo "${STATUS_JSON}" | jq -r '.API_URL // empty')
ANON_KEY=$(echo "${STATUS_JSON}" | jq -r '.ANON_KEY // empty')
SERVICE_ROLE_KEY=$(echo "${STATUS_JSON}" | jq -r '.SERVICE_ROLE_KEY // empty')

# Fallbacks for common local Supabase defaults
if [ -z "${API_URL}" ] || [ "${API_URL}" = "null" ]; then
  API_URL="http://127.0.0.1:54321"
  echo_warn "API_URL not found in status JSON. Using default ${API_URL}"
fi

# Some older CLI versions expose keys under nested fields; try common fallbacks
if [ -z "${ANON_KEY}" ] || [ "${ANON_KEY}" = "null" ]; then
  ANON_KEY=$(echo "${STATUS_JSON}" | jq -r '.anon_key // .ANONKEY // .anonKey // empty')
fi
if [ -z "${SERVICE_ROLE_KEY}" ] || [ "${SERVICE_ROLE_KEY}" = "null" ]; then
  SERVICE_ROLE_KEY=$(echo "${STATUS_JSON}" | jq -r '.service_role_key // .SERVICE_ROLE // .serviceRoleKey // empty')
fi

if [ -z "${ANON_KEY}" ] || [ -z "${SERVICE_ROLE_KEY}" ]; then
  echo_warn "Anon/Service role keys not found in status JSON. If you recently started Supabase, run 'supabase status' once and re-try."
fi

# Docker on macOS can reach host via host.docker.internal; rewrite host for containers
HOSTED_API_URL=${API_URL}
if [[ "${API_URL}" == http://127.0.0.1:* ]] || [[ "${API_URL}" == http://localhost:* ]]; then
  PORT=${API_URL##*:}
  HOSTED_API_URL="http://host.docker.internal:${PORT}"
fi

# Copy required vars from .env if they exist
OPENAI_API_KEY=""
SERVICE_API_KEY=""
if [ -f .env ]; then
  OPENAI_API_KEY=$(grep "^OPENAI_API_KEY=" .env | cut -d '=' -f2- || echo "")
  SERVICE_API_KEY=$(grep "^SERVICE_API_KEY=" .env | cut -d '=' -f2- || echo "")
fi

OUT_FILE=".env.compose.local"
cat > "${OUT_FILE}" <<EOF
# Auto-generated by scripts/generate_compose_env.sh
# Local Supabase configuration for docker-compose

# Supabase (local instance)
SUPABASE_URL=${HOSTED_API_URL}
SUPABASE_KEY=${SERVICE_ROLE_KEY}
SUPABASE_SERVICE_ROLE_KEY=${SERVICE_ROLE_KEY}
SUPABASE_ANON_KEY=${ANON_KEY}

# Environment
ENVIRONMENT=development

# OpenAI (copied from .env)
OPENAI_API_KEY=${OPENAI_API_KEY}

# API Key for CLI testing (copied from .env)
SERVICE_API_KEY=${SERVICE_API_KEY}
SERVICE_URL=http://localhost:8000
EOF

echo_info "Wrote ${OUT_FILE} with local Supabase settings:"
echo "  SUPABASE_URL=${HOSTED_API_URL}"
echo "  API Key: ${SERVICE_API_KEY:0:15}... (from .env)"
echo ""
echo "âœ… Ready for docker-compose up"


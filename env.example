# env.example
# Copy this to .env and fill in your values
# Run: make setup (or manually: cp env.example .env)

# ============================================================================
# Application Configuration
# ============================================================================
ENVIRONMENT=local
WEB_HOST=0.0.0.0
WEB_PORT=8000

# Rate Limiting
RATE_LIMIT_REQUESTS=100

# ============================================================================
# OpenAI API
# ============================================================================
OPENAI_API_KEY=your-openai-api-key

# ============================================================================
# Supabase Configuration
# ============================================================================
# For local development, use local Supabase instance
SUPABASE_URL=http://localhost:54321
SUPABASE_SERVICE_ROLE_KEY=your-supabase-service-role-key
SUPABASE_ANON_KEY=your-supabase-anon-key
SUPABASE_PROJECT_REF=your-project-ref

# ============================================================================
# Observability - Local Grafana (Docker Compose)
# ============================================================================
# Local Grafana credentials for dashboard deployment
# These are used when running 'make dashboards-deploy' locally
GRAFANA_URL=http://localhost:3000
GRAFANA_USER=lqs
GRAFANA_PASSWORD=test

# ============================================================================
# Observability - Grafana Cloud (Optional)
# ============================================================================
# Only needed if you want to deploy dashboards to Grafana Cloud
# or send telemetry directly to cloud (bypassing local stack)
# Get these credentials from: https://beverage.grafana.net
# Navigate to: Connections → OpenTelemetry → Create Access Token

# Grafana Cloud credentials (for cloud deployment)
# When these are set, 'make dashboards-deploy' will push to cloud instead of local
# GRAFANA_CLOUD_INSTANCE_ID=your-instance-id
# GRAFANA_CLOUD_API_KEY=your-grafana-api-key

# OpenTelemetry endpoint (optional - for direct cloud telemetry)
# Leave commented to use local Grafana Agent (default in docker-compose)
# OTEL_EXPORTER_OTLP_ENDPOINT=https://otlp-gateway-prod-XX.grafana.net/otlp

# Optional: Additional resource attributes (SDK also uses OTEL_SERVICE_NAME, etc.)
# OTEL_RESOURCE_ATTRIBUTES=service.version=1.0.0,custom.attribute=value

